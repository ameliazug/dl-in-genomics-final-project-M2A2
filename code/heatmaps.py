# -*- coding: utf-8 -*-
"""heatmaps.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WigYd8hRwSn-EWC8VvtVStzUoYSj8eup
"""

import numpy as np
import pandas as pd
import h5py
from google.colab import drive
import matplotlib.pyplot as plt

drive.mount('/content/drive/')

#Retrieve all relevant filepaths below:

processed_data_filepath = '/content/drive/MyDrive/Processed_Data/'

methyl_list1 = [processed_data_filepath + 'A549/methyl_enrichment.h5',
                processed_data_filepath + 'GM12878/methyl_enrichment.h5',
                processed_data_filepath + 'GM23248/methyl_enrichment.h5',
                processed_data_filepath + 'H1/methyl_enrichment.h5',
                processed_data_filepath + 'HeLa-S3/methyl_enrichment.h5',
                processed_data_filepath + 'HepG2/methyl_enrichment.h5',
                processed_data_filepath + 'K562/methyl_enrichment.h5',
                processed_data_filepath + 'OCI-LY7/methyl_enrichment.h5',
                processed_data_filepath + 'SKNSH/methyl_enrichment.h5'
                ]
methyl_list2 = [processed_data_filepath + 'A549/methyl_enrichment2.h5',
                processed_data_filepath + 'GM12878/methyl_enrichment2.h5',
                processed_data_filepath + 'GM23248/methyl_enrichment2.h5',
                processed_data_filepath + 'H1/methyl_enrichment2.h5',
                processed_data_filepath + 'HeLa-S3/methyl_enrichment2.h5',
                processed_data_filepath + 'HepG2/methyl_enrichment2.h5',
                processed_data_filepath + 'K562/methyl_enrichment2.h5',
                processed_data_filepath + 'OCI-LY7/methyl_enrichment2.h5',
                processed_data_filepath + 'SKNSH/methyl_enrichment2.h5'
                ]
acetyl_list1 = [processed_data_filepath + 'A549/acetyl_enrichment.h5',
                processed_data_filepath + 'GM12878/acetyl_enrichment.h5',
                processed_data_filepath + 'GM23248/acetyl_enrichment.h5',
                processed_data_filepath + 'H1/acetyl_enrichment.h5',
                processed_data_filepath + 'HeLa-S3/acetyl_enrichment.h5',
                processed_data_filepath + 'HepG2/acetyl_enrichment.h5',
                processed_data_filepath + 'K562/acetyl_enrichment.h5',
                processed_data_filepath + 'OCI-LY7/acetyl_enrichment.h5',
                processed_data_filepath + 'SKNSH/acetyl_enrichment.h5'
                ]
acetyl_list2 = [processed_data_filepath + 'A549/acetyl_enrichment2.h5',
                processed_data_filepath + 'GM12878/acetyl_enrichment2.h5',
                processed_data_filepath + 'GM23248/acetyl_enrichment2.h5',
                processed_data_filepath + 'H1/acetyl_enrichment2.h5',
                processed_data_filepath + 'HeLa-S3/acetyl_enrichment2.h5',
                processed_data_filepath + 'HepG2/acetyl_enrichment2.h5',
                processed_data_filepath + 'K562/acetyl_enrichment2.h5',
                processed_data_filepath + 'OCI-LY7/acetyl_enrichment2.h5',
                processed_data_filepath + 'SKNSH/acetyl_enrichment2.h5'
                ]

# Define filepaths
processed_data_filepath = '/content/drive/MyDrive/Processed_Data/'
cell_lines = ['A549', 'GM12878', 'GM23248', 'H1', 'HeLa-S3', 'HepG2', 'K562', 'OCI-LY7', 'SKNSH']

# Build list of filepaths for both replicates
rep1_paths = [f"{processed_data_filepath}{cl}/methyl_enrichment.h5" for cl in cell_lines]
rep2_paths = [f"{processed_data_filepath}{cl}/methyl_enrichment2.h5" for cl in cell_lines]

# Initialize lists to hold values
methyl1_means, methyl2_means = [], []
acetyl1_means, acetyl2_means = [], []

# Load and compute means (including zeros and NaNs)
for fp1, fp2 in zip(rep1_paths, rep2_paths):
    with h5py.File(fp1, 'r') as f1, h5py.File(fp2, 'r') as f2:
        methyl1 = np.array(f1['FeatureInput'])
        methyl2 = np.array(f2['FeatureInput'])
        acetyl1 = np.array(f1['log2_ChipDivInput'])
        acetyl2 = np.array(f2['log2_ChipDivInput'])

        methyl1_means.append(np.nanmean(methyl1))
        methyl2_means.append(np.nanmean(methyl2))
        acetyl1_means.append(np.nanmean(acetyl1))
        acetyl2_means.append(np.nanmean(acetyl2))

# Reshape into column vectors and stack
methyl_matrix = np.column_stack([methyl1_means, methyl2_means])
acetyl_matrix = np.column_stack([acetyl1_means, acetyl2_means])

# Plot side-by-side heatmaps
fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 6), sharey=True)

# Methylation heatmap (2 columns per cell line)
im1 = ax1.imshow(methyl_matrix, cmap='Blues', aspect='auto')
ax1.set_title("Methylation (Replicates 1 & 2)", fontsize=12)
ax1.set_yticks(np.arange(len(cell_lines)))
ax1.set_yticklabels(cell_lines)
ax1.set_xticks([0, 1])
ax1.set_xticklabels(['Rep1', 'Rep2'])
fig.colorbar(im1, ax=ax1, orientation='vertical', fraction=0.046)

# Acetylation heatmap (2 columns per cell line)
im2 = ax2.imshow(acetyl_matrix, cmap='Reds', aspect='auto')
ax2.set_title("Acetylation (Replicates 1 & 2)", fontsize=12)
ax2.set_yticks([])  # Hide repeated cell line labels
ax2.set_xticks([0, 1])
ax2.set_xticklabels(['Rep1', 'Rep2'])
fig.colorbar(im2, ax=ax2, orientation='vertical', fraction=0.046)

# Layout adjustments
fig.suptitle("Mean Methylation and Acetylation by Replicate", fontsize=14)
plt.tight_layout()
plt.subplots_adjust(top=0.88)
plt.show()

# Store zero percentages
methyl1_zeros, methyl2_zeros = [], []
acetyl1_zeros, acetyl2_zeros = [], []

for fp1, fp2 in zip(rep1_paths, rep2_paths):
    with h5py.File(fp1, 'r') as f1, h5py.File(fp2, 'r') as f2:
        methyl1 = np.array(f1['FeatureInput'])
        acetyl1 = np.array(f1['log2_ChipDivInput'])
        methyl2 = np.array(f2['FeatureInput'])
        acetyl2 = np.array(f2['log2_ChipDivInput'])

        methyl1_zeros.append(100 * np.sum(methyl1 == 0) / methyl1.size)
        methyl2_zeros.append(100 * np.sum(methyl2 == 0) / methyl2.size)
        acetyl1_zeros.append(100 * np.sum(acetyl1 == 0) / acetyl1.size)
        acetyl2_zeros.append(100 * np.sum(acetyl2 == 0) / acetyl2.size)

# Plotting
fig, ax = plt.subplots(figsize=(14, 6))
width = 0.2
x = np.arange(len(cell_lines))

# Plot each set of bars with offsets
ax.bar(x - 1.5*width, methyl1_zeros, width, label='Methylation Rep1', color='navy')
ax.bar(x - 0.5*width, methyl2_zeros, width, label='Methylation Rep2', color='blue')
ax.bar(x + 0.5*width, acetyl1_zeros, width, label='Acetylation Rep1', color='darkred')
ax.bar(x + 1.5*width, acetyl2_zeros, width, label='Acetylation Rep2', color='red')

# Labeling
ax.set_xlabel('Cell Line')
ax.set_ylabel('Percentage of Zeros (%)')
ax.set_title('Percentage of Zeros in Methylation and Acetylation Data')
ax.set_xticks(x)
ax.set_xticklabels(cell_lines, rotation=45, ha='right')
ax.legend()

plt.tight_layout()
plt.show()